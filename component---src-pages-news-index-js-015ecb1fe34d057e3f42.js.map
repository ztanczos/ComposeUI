{"version":3,"file":"component---src-pages-news-index-js-015ecb1fe34d057e3f42.js","mappings":"uIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,aAAa,KAACC,GAAQR,EAErD,OADKQ,GAqBP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAvBaG,CAAqB,QAAQ,GACjCC,EAAAA,cAAoBL,EAAM,CAC/BM,MAAO,aACND,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,qRAAsRU,EAAAA,cAAoBb,EAAYI,IAAK,CACrWW,IAAK,kDACLC,IAAK,qBACH,KAAMH,EAAAA,cAAoBb,EAAYK,EAAG,CAC3CY,KAAM,2FACLJ,EAAAA,cAAoBb,EAAYI,IAAK,CACtCW,IAAK,oGACLC,IAAK,QACFH,EAAAA,cAAoB,IAAK,CAC5BK,QAAS,WACTD,KAAM,8CACLJ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,iBAC9C,CAKA,IAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAASC,GAAanB,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOa,EAAYP,EAAAA,cAAoBO,EAAWrB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,C,oFCMA,UA1BkBsB,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACnC,MAAMG,EAAOF,EAAKG,OAAOC,MAEzB,OACEb,EAAAA,cAACc,EAAAA,EAAM,CAACL,KAAMA,EAAMC,SAAUA,GAC5BV,EAAAA,cAAA,OAAKe,UAAU,kBACbf,EAAAA,cAACgB,EAAAA,EAAW,MACZhB,EAAAA,cAACiB,EAAAA,EAAG,CAAChB,MAAM,SACVU,EAAKO,KAAKC,IACT,MAAMlB,EAAQkB,EAAKC,YAAYnB,MACzBoB,EAAO,IAAIC,KAAKH,EAAKC,YAAYC,MACvC,OACErB,EAAAA,cAAA,WAASe,UAAU,uBAAuBQ,IAAKJ,EAAKK,OAAOC,MACzDzB,EAAAA,cAAA,OAAKe,UAAU,WAAWM,EAAKK,sBAC/B1B,EAAAA,cAAA,UACEA,EAAAA,cAAC2B,EAAAA,KAAI,CAACC,GAAIT,EAAKK,OAAOC,MAAOxB,IAE/BD,EAAAA,cAAA,eAAUmB,EAAKU,SACP,KAIT,C","sources":["webpack://ms-gh-pages/./content/hero.mdx","webpack://ms-gh-pages/./src/pages/news/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Hero} = _components;\n  if (!Hero) _missingMdxReference(\"Hero\", true);\n  return React.createElement(Hero, {\n    title: \"ComposeUI\"\n  }, React.createElement(_components.p, null, \"ComposeUI is a .NET based general UI Container and Unified UI and App host which\\nenables the hosting of Web and desktop content. It supports desktop and web applications\\nin order to provide an evergreen alternative to Electron, OpenFin and similar by the use of WebView2.\"), React.createElement(_components.img, {\n    src: \"https://badgen.net/badge/Lifecycle/Active/green\",\n    alt: \"Lifecycle Active\"\n  }), \"\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/morganstanley/ComposeUI/actions/workflows/continuous-integration.yml\"\n  }, React.createElement(_components.img, {\n    src: \"https://github.com/morganstanley/ComposeUI/actions/workflows/continuous-integration.yml/badge.svg\",\n    alt: \"CI\"\n  })), React.createElement(\"a\", {\n    variant: \"outlined\",\n    href: \"https://github.com/morganstanley/ComposeUI\"\n  }, React.createElement(_components.p, null, \"Project Repo\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\n\nimport HeroContent from '../../../content/hero.mdx';\n\nconst NewsIndex = ({ data, location }) => {\n  const news = data.allMdx.nodes;\n\n  return (\n    <Layout data={data} location={location}>\n      <div className=\"main news-main\">\n        <HeroContent />\n        <Seo title=\"News\" />\n        {news.map((node) => {\n          const title = node.frontmatter.title;\n          const date = new Date(node.frontmatter.date);\n          return (\n            <article className=\"content news-content\" key={node.fields.slug}>\n              <div className=\"eyebrow\">{date.toLocaleDateString()}</div>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              <section>{node.excerpt}</section>\n            </article>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nexport default NewsIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        documentationUrl\n      }\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"/news//\" } } }\n      sort: [{ frontmatter: { date: DESC } }]\n    ) {\n      nodes {\n        excerpt\n        frontmatter {\n          date\n          title\n        }\n        internal {\n          contentFilePath\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","img","a","_provideComponents","components","Hero","id","component","Error","_missingMdxReference","React","title","src","alt","href","variant","wrapper","MDXLayout","_ref","data","location","news","allMdx","nodes","Layout","className","HeroContent","Seo","map","node","frontmatter","date","Date","key","fields","slug","toLocaleDateString","Link","to","excerpt"],"sourceRoot":""}